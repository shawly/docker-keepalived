#!/command/with-contenv bash

# Enabling advanced mode
if [[ "${KEEPALIVED_CUSTOM_CONFIG}" == "true" ]]; then
    echo "KEEPALIVED_CUSTOM_CONFIG was enabled, skipping validation!"
    exit 0
else
    # Setup check script
    if [[ -z ${KEEPALIVED_CHECK_SCRIPT} ]]; then
        if [[ -z ${KEEPALIVED_CHECK_IP} ]] || [[ ${KEEPALIVED_CHECK_IP} = 'any' ]]; then
            KEEPALIVED_CHECK_SCRIPT="iptables -t nat -nL CATTLE_PREROUTING | grep ':${KEEPALIVED_CHECK_PORT}'"
        else
            KEEPALIVED_CHECK_SCRIPT="iptables -nL | grep '${KEEPALIVED_CHECK_IP}' \&\& iptables -t nat -nL CATTLE_PREROUTING | grep ':${KEEPALIVED_CHECK_PORT}'"
        fi
    fi
    # Make sure the variables we need to run are populated and (roughly) valid
    if ! ipcalc -c "${KEEPALIVED_VIRTUAL_IP}"; then
        echo "The KEEPALIVED_VIRTUAL_IP environment variable (${KEEPALIVED_VIRTUAL_IP}) is not a valid IP address, exiting..."
        exit 1
    fi
    if ! ipcalc -c "${KEEPALIVED_VIRTUAL_IP}/${KEEPALIVED_VIRTUAL_MASK}"; then
        echo "The KEEPALIVED_VIRTUAL_MASK environment variable (${KEEPALIVED_VIRTUAL_MASK}) is not a valid subnet mask, exiting..."
        exit 1
    fi
    if ! [[ "${KEEPALIVED_VRID}" =~ ^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-5][0-5])$ ]]; then
        echo "The KEEPALIVED_VRID environment variable (${KEEPALIVED_VRID}) is not a number between 1 and 255, exiting..."
        exit 1
    fi
    if ! [[ "${KEEPALIVED_PRIORITY}" =~ ^[[:digit:]]+$ ]]; then
        echo "The KEEPALIVED_PRIORITY environment variable (${KEEPALIVED_PRIORITY}) is not a number, exiting..."
        exit 1
    fi
    if ! [[ "${KEEPALIVED_STATE}" =~ ^(MASTER)|(BACKUP)$ ]]; then
        echo "The KEEPALIVED_STATE environment variable (${KEEPALIVED_STATE}) must be either MASTER or BACKUP, exiting..."
        exit 1
    fi
    # Check if given interface is available
    IFS=$'\n' read -r -d '' -a available_interfaces < <(ip -br link show | awk '$1 !~ "lo|vir|docker|veth|br-" { print $1 }' | cut -d '@' -f1 && printf '\0')
    if ! [[ " ${available_interfaces[*]} " =~ " ${KEEPALIVED_INTERFACE} " || "${KEEPALIVED_INTERFACE}" == "auto" ]]; then
        echo "The KEEPALIVED_INTERFACE environment variable contains a non-existent interface \"${KEEPALIVED_INTERFACE}\". Available interfaces are: ${available_interfaces[*]}. Exiting..."
        exit 1
    fi

    # Check if interface is set to 'auto' and match CIDR
    if [[ "${KEEPALIVED_INTERFACE}" == "auto" ]]; then
        while IFS=_ read -r interface cidr_ip; do
            interface_name=$interface
            interface_network=$(ipcalc -n "$cidr_ip" | cut -d'=' -f2)
            interface_mask=$(ipcalc -p "$cidr_ip" | cut -d'=' -f2)
            vip_network=$(ipcalc -n "$KEEPALIVED_VIRTUAL_IP/$KEEPALIVED_VIRTUAL_MASK" | cut -d'=' -f2)

            if [[ "$KEEPALIVED_VIRTUAL_MASK" == "$interface_mask" ]] && [[ "$vip_network" == "$interface_network" ]]; then
                echo "Found interface $interface_name for $KEEPALIVED_VIRTUAL_IP/$KEEPALIVED_VIRTUAL_MASK"
                export KEEPALIVED_INTERFACE="$(cut -d '@' -f1 <<< "$interface_name")"
                break
            fi
        done < <(ip -br addr show | awk '$1 !~ "lo|vir|docker|veth|br-" { print $1"_"$3 }')

        # If no matching interface is found
        if [[ $KEEPALIVED_INTERFACE == "auto" ]]; then
            IFS=$'\n' read -r -d '' -a available_ranges < <(ip -br addr show | awk '$1 !~ "lo|vir|docker|veth|br-" { print $3 }' && printf '\0')
            echo "The KEEPALIVED_VIRTUAL_IP and KEEPALIVED_VIRTUAL_MASK don't match any interfaces on this device. Available ranges are: ${available_ranges[*]}. Exiting..."
            exit 1
        fi
    fi

    # Make sure to clean up VIP before start (in case of ungraceful shutdown)
    if ip addr | grep -q "${KEEPALIVED_INTERFACE}" | grep -q "${KEEPALIVED_VIRTUAL_IP}/${KEEPALIVED_VIRTUAL_MASK}"; then
        ip addr del "${KEEPALIVED_VIRTUAL_IP}/${KEEPALIVED_VIRTUAL_MASK}" dev "${KEEPALIVED_INTERFACE}"
    fi

    # Substitute variables in config file.
    sed -i "s/{{VIRTUAL_IP}}/${KEEPALIVED_VIRTUAL_IP}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{VIRTUAL_MASK}}/${KEEPALIVED_VIRTUAL_MASK}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{CHECK_SCRIPT}}/${KEEPALIVED_CHECK_SCRIPT}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{VRID}}/${KEEPALIVED_VRID}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{INTERFACE}}/${KEEPALIVED_INTERFACE}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{PRIORITY}}/${KEEPALIVED_PRIORITY}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{STATE}}/${KEEPALIVED_STATE}/g" /etc/keepalived/keepalived.conf
fi

# Finished configuration,
echo "Displaying resulting /etc/keepalived/keepalived.conf contents..."
cat /etc/keepalived/keepalived.conf
