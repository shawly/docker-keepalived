#!/command/with-contenv bash

# Enabling advanced mode
if [[ "${KEEPALIVED_CUSTOM_CONFIG}" == "true" ]]; then
    echo "KEEPALIVED_CUSTOM_CONFIG was enabled, skipping validation!"
    exit 0
else
    # Setup check script
    if [[ -z ${KEEPALIVED_CHECK_SCRIPT} ]]; then
        if [[ -z ${KEEPALIVED_CHECK_IP} ]] || [[ ${KEEPALIVED_CHECK_IP} = 'any' ]]; then
            KEEPALIVED_CHECK_SCRIPT="iptables -t nat -nL CATTLE_PREROUTING | grep ':${KEEPALIVED_CHECK_PORT}'"
        else
            KEEPALIVED_CHECK_SCRIPT="iptables -nL | grep '${KEEPALIVED_CHECK_IP}' && iptables -t nat -nL CATTLE_PREROUTING | grep ':${CHECK_PORT}'"
        fi
    fi
    # Make sure the variables we need to run are populated and (roughly) valid
    if ! [[ "${KEEPALIVED_VIRTUAL_IP}" =~ ^(([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-2][0-3])\.)(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-5][0-5])\.){2}([1-9]|[1-9][0-9]|1[0-9]{2}|2[0-5][0-5])$ ]]; then
        echo "The KEEPALIVED_VIRTUAL_IP environment variable (${KEEPALIVED_VIRTUAL_IP}) is null or not a valid IP address, exiting..."
        exit 1
    fi
    if ! [[ "${KEEPALIVED_VIRTUAL_MASK}" =~ ^([0-9]|[1-2][0-9]|3[0-2])$ ]]; then
        echo "The KEEPALIVED_VIRTUAL_MASK environment variable (${KEEPALIVED_VIRTUAL_MASK}) is null or not a valid subnet mask, exiting..."
        exit 1
    fi
    if ! [[ "${KEEPALIVED_VRID}" =~ ^([1-9]|[1-9][0-9]|1[0-9][0-9]|2[0-5][0-5])$ ]]; then
        echo "The KEEPALIVED_VRID environment variable (${KEEPALIVED_VRID}) is null or not a number between 1 and 255, exiting..."
        exit 1
    fi
    # Possibly some interfaces are named and don't end in a number so beware of this one
    if ! [[ "${KEEPALIVED_INTERFACE}" =~ ^.*[0-9]$ || "${KEEPALIVED_INTERFACE}" =~ 'auto' ]]; then
        echo "The KEEPALIVED_INTERFACE environment variable (${KEEPALIVED_INTERFACE}) is null or doesn't end in a number, exiting..."
        exit 1
    fi
    # Check if given interface is available
    available_interfaces=( $(ip -br l | awk '$1 !~ "lo|vir|docker0|veth|docker_" { print $1}') )
    if [[ ! " ${available_interfaces[*]} " =~ " ${KEEPALIVED_INTERFACE} " || "${KEEPALIVED_INTERFACE}" =~ 'auto' ]]; then
        echo "The KEEPALIVED_INTERFACE environment variable contains a non existent interface \"${KEEPALIVED_INTERFACE}\". Available interfaces are: ${available_interfaces[@]}). Exiting..."
        exit 1
    fi
    # Check if interface is set to auto. Where we'll pull an interface matching the subnet mask of the ip given.
    if [[ "${KEEPALIVED_INTERFACE}" =~ 'auto' ]]; then
        # Loop through the returned interfaces to match see if there's a matching CIDR
        for interface in $(ip -br addr | awk '$1 != "lo|vir|docker0|veth|docker_" { print $1"_"$3}'); do
            # Break out the IPs from the interface and environment variable
            firsti="$(echo $interface | cut -d"_" -f2 | cut -d"/" -f 1 | cut -d"." -f 1)"
            secondi="$(echo $interface | cut -d"_" -f2 | cut -d"/" -f 1 | cut -d"." -f 2)"
            thirdi="$(echo $interface | cut -d"_" -f2 | cut -d"/" -f 1 | cut -d"." -f 3)"
            fourthi="$(echo $interface | cut -d"_" -f2 | cut -d"/" -f 1 | cut -d"." -f 4)"
            cidri="$(echo $interface | cut -d"_" -f2 | cut -d"/" -f 2)"

            firstv="$(echo $KEEPALIVED_VIRTUAL_IP | cut -d"." -f 1)"
            secondv="$(echo $KEEPALIVED_VIRTUAL_IP | cut -d"." -f 2)"
            thirdv="$(echo $KEEPALIVED_VIRTUAL_IP | cut -d"." -f 3)"
            fourthv="$(echo $KEEPALIVED_VIRTUAL_IP | cut -d"." -f 4)"
            cidrv="$(echo $KEEPALIVED_VIRTUAL_MASK)"

            if [[ $cidrv != $cidri ]]; then
                continue
            elif [[ $cidri -ge 8 && $firsti != $firstv ]]; then
                continue
            elif [[ $cidri -ge 16 && $secondi != $secondv ]]; then
                continue
            elif [[ $cidri -ge 24 && $thirdi != $thirdv ]]; then
                continue
            elif [[ $cidri -ge 32 && $fourhti != $fourthv ]]; then
                continue
            fi

            KEEPALIVED_INTERFACE=$(echo $interface | cut -d"_" -f1)
        done
        if [[ $KEEPALIVED_INTERFACE =~ 'auto' ]]; then
            available_ranges=( $(ip -br addr | awk '$1 !~ "lo|vir|docker0|veth|docker_" { print $3}') )
            echo "The KEEPALIVED_VIRTUAL_IP and KEEPALIVED_VIRTUAL_MASK don't match any interfaces on this device. Available ranges are: ${available_ranges[@]}). Exiting..."
            exit 1
        fi
    fi
    # Make sure to clean up VIP before start (in case of ungraceful shutdown)
    if [[ "$(ip addr | grep ${KEEPALIVED_INTERFACE} | grep ${KEEPALIVED_VIRTUAL_IP})" ]]; then
        ip addr del "${KEEPALIVED_VIRTUAL_IP}/${KEEPALIVED_VIRTUAL_MASK}" dev "${KEEPALIVED_INTERFACE}"
    fi

    # Substitute variables in config file.
    sed -i "s/{{VIRTUAL_IP}}/${KEEPALIVED_VIRTUAL_IP}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{VIRTUAL_MASK}}/${KEEPALIVED_VIRTUAL_MASK}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{CHECK_SCRIPT}}/${KEEPALIVED_CHECK_SCRIPT}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{VRID}}/${KEEPALIVED_VRID}/g" /etc/keepalived/keepalived.conf
    sed -i "s/{{INTERFACE}}/${KEEPALIVED_INTERFACE}/g" /etc/keepalived/keepalived.conf
fi

# Finished configuration,
echo "Displaying resulting /etc/keepalived/keepalived.conf contents..."
cat /etc/keepalived/keepalived.conf
